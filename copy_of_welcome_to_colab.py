# -*- coding: utf-8 -*-
"""Copy of Welcome To Colab

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1p_hhqYl49ych9KZtg-BGKLTnA0LJOExB
"""

import numpy as np
import pandas as pd
from sklearn.metrics import confusion_matrix ,classification_report,precision_score, recall_score ,f1_score
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.ensemble import RandomForestClassifier
from sklearn.neighbors import KNeighborsClassifier
from sklearn.tree import DecisionTreeClassifier
from sklearn.naive_bayes import GaussianNB
from sklearn.svm import SVC

import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd
import numpy as np
import warnings

df=pd.read_csv(r"/diabetes.csv")

df

df.info()

df.isnull().sum()

df.describe()

x = df.drop(columns = ['Outcome'])

y=df['Outcome']

x_train, x_test, y_train, y_test =train_test_split(x,y,test_size=0.25,random_state=15)

model=RandomForestClassifier()

model.fit(x_train,y_train)

trainscore=model.score(x_train,y_train)
testscore=model.score(x_test,y_test)

y_pred=model.predict(x_test)

f1score = f1_score(y_test, y_pred, average='weighted')

confusionmatrix=confusion_matrix(y_test, y_pred)

print(f1score)

print(confusionmatrix)

import joblib

# Save the model to a file with a .pkl extension
joblib.dump(model, 'diabetes.pkl')

x_test

y_test

np.random.seed(42)

data = {
    'Pregnancies': np.random.randint(0, 15, 500),
    'Glucose': np.random.normal(120, 30, 500),
    'BloodPressure': np.random.normal(70, 12, 500),
    'SkinThickness': np.random.normal(20, 8, 500),
    'Insulin': np.random.normal(80, 40, 500),
    'BMI': np.random.normal(32, 7, 500),
    'DiabetesPedigreeFunction': np.random.normal(0.5, 0.3, 500),
    'Age': np.random.randint(21, 80, 500),
    'Outcome': np.random.randint(0, 2, 500)
}


df = pd.DataFrame(data)

df.hist(bins=20, figsize=(14, 12), color='skyblue', edgecolor='black')
plt.suptitle('Histograms of Diabetes-Related Variables', fontsize=16)
plt.tight_layout(rect=[0, 0, 1, 0.96])
plt.show()

import joblib


model = joblib.load('diabetes.pkl')

input_values = [[12	,92	,62	,7,	258,	27.6	,0.926	,44]]
predictions = model.predict(input_values)

print("Predicted BMI class:", predictions)

"""# New Section"""

